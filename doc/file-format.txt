
Object files (.obj) and LC3 files (.lc3) share the same file structure.
The file start with a 6-byte header, with the following format:

['L' 'C' '3' 0x03 : 4 bytes] [flags : 2 bytes]

The following flags are currently defined:
    0x0001 | OBJ | The file is an object file (.obj), so instructions are followed by label strings
    0x0002 | EXC | The file is an LC3 executable (.lc3)
    0x0004 | DBG | Instructions are followed by debug string, specifying their original instruction code


After this header, the file contains a series of segments. There are two types of segments:
    1. Symbol
    2. Code


Symbol segments / symbol tables start with a segment header as such:
['S' : 1 byte]
[N (symbol count) : 4 bytes]

Followed by N symbol definitions:
[address : 2 bytes] [symbol : NULL-terminated string]

Code segments start with a similar header:
['A' : 1 byte]
[ORIG : 2 bytes]
[N (instruction count) : 2 bytes]


Followed by N instruction defintitions. The format of an instruction depends on the flags:

if OBJ and DBG are both not set:
[instruction : 2 bytes]

if OBJ is set and DBG is not set:
[instruction : 2 bytes] [label : NULL-terminated string]

if DBG is set and OBJ is not set:
[instruction : 2 bytes] [debug : NULL-terminated string]

if both OBJ and DBG are set:
[instruction : 2 bytes] [label : NULL-terminated string] [debug : NULL-terminated string]
