
In the first step of the assembly process, input files are transformed into object (.obj) files.
These files need to be linked properly into an LC3 file (.lc3) before the program can be loaded.

The object file starts with a small header, containing the following elements:
[magic number | "LC3A"]
[flags | 2 bytes]

Current flags:
    0x0001 | File is an object file
    0x0002 | File is an executable
    0x0004 | File contains debug info

An object file has two main parts. The first section of the object file contains the symbol table.
It starts with a 4-byte integer N specifying the size of the table, followed by a list N of address-symbol pairs as follows:
[address | 2 bytes][symbol | NULL-terminated uppercase string]

The second part contains the instructions, and possibly debug info (if the debug flag is set).
The formatting depends on the instruction itself. If the instruction contains a symbol,
it is followed by a NULL-terminated string specifying the symbols name.
Otherwise, the instruction stands on its own (except a possible debug string after it)

A series of instructions start with a small header:
[origin | 2 bytes][instructions | 2 bytes]

Followed by a list of instructions:
[instruction | 2 bytes] [haslabel | 1 bit] [hasdebug | 1 bit] [padding | 6 bits] {label | NULL-terminated} {debug | NULL-terminated}

There can be multiple such lists.
